# User Management Microservice Development Environment

services:
  # The Node.js application
  app:
    image: node:18-alpine
    working_dir: /app
    ports:
      - "3000:3000" # API port
      - "9229:9229" # Node.js debug port
    volumes:
      - .:/app # Mount current directory to container
      - node_modules:/app/node_modules # Use named volume for node_modules
    environment:
      - NODE_ENV=development
      - PORT=3000
      - API_PREFIX=/api/v1
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/usermanagement
      - JWT_ACCESS_SECRET=dev_access_secret_key
      - JWT_REFRESH_SECRET=dev_refresh_secret_key
      - JWT_ACCESS_EXPIRATION=15m
      - JWT_REFRESH_EXPIRATION=7d
      - LOG_LEVEL=debug
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - app-network
    command: >
      sh -c "apk add --no-cache openssl &&
          cp .env.template .env
           npm install &&
           npx prisma generate &&
           npx prisma migrate dev --name init &&
           echo 'Skipping seed for now...' &&
           npm run build &&
           npm start"
    # Enable container restart until stopped manually
    restart: unless-stopped

  # PostgreSQL database
  postgres:
    image: postgres:14-alpine
    ports:
      - "5433:5432"
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_DB=usermanagement
    volumes:
      - postgres-dev-data:/var/lib/postgresql/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  # PGAdmin for database management
  pgadmin:
    image: dpage/pgadmin4
    ports:
      - "5050:80"
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@example.com
      - PGADMIN_DEFAULT_PASSWORD=admin
    volumes:
      - pgadmin-dev-data:/var/lib/pgadmin
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - app-network
    restart: unless-stopped

networks:
  app-network:
    driver: bridge

volumes:
  postgres-dev-data:
  pgadmin-dev-data:
  node_modules:
